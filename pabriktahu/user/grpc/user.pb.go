// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

/*
Package grpc is a generated protocol buffer package.

It is generated from these files:
	user.proto

It has these top-level messages:
	AddUserReq
	ReadUserByKetReq
	ReadUserByKetResp
	ReadUserByKet
	ReadUserResp
	UpdateUserReq
*/
package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddUserReq struct {
	Username   string `protobuf:"bytes,1,opt,name=Username" json:"Username,omitempty"`
	Password   string `protobuf:"bytes,2,opt,name=Password" json:"Password,omitempty"`
	IDKaryawan string `protobuf:"bytes,3,opt,name=IDKaryawan" json:"IDKaryawan,omitempty"`
	Status     int32  `protobuf:"varint,4,opt,name=Status" json:"Status,omitempty"`
	CreatedBy  string `protobuf:"bytes,5,opt,name=CreatedBy" json:"CreatedBy,omitempty"`
	Keterangan string `protobuf:"bytes,6,opt,name=Keterangan" json:"Keterangan,omitempty"`
}

func (m *AddUserReq) Reset()                    { *m = AddUserReq{} }
func (m *AddUserReq) String() string            { return proto.CompactTextString(m) }
func (*AddUserReq) ProtoMessage()               {}
func (*AddUserReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AddUserReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AddUserReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AddUserReq) GetIDKaryawan() string {
	if m != nil {
		return m.IDKaryawan
	}
	return ""
}

func (m *AddUserReq) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *AddUserReq) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *AddUserReq) GetKeterangan() string {
	if m != nil {
		return m.Keterangan
	}
	return ""
}

type ReadUserByKetReq struct {
	Keterangan string `protobuf:"bytes,1,opt,name=Keterangan" json:"Keterangan,omitempty"`
}

func (m *ReadUserByKetReq) Reset()                    { *m = ReadUserByKetReq{} }
func (m *ReadUserByKetReq) String() string            { return proto.CompactTextString(m) }
func (*ReadUserByKetReq) ProtoMessage()               {}
func (*ReadUserByKetReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ReadUserByKetReq) GetKeterangan() string {
	if m != nil {
		return m.Keterangan
	}
	return ""
}

type ReadUserByKetResp struct {
	AllKet []*ReadUserByKet `protobuf:"bytes,1,rep,name=allKet" json:"allKet,omitempty"`
}

func (m *ReadUserByKetResp) Reset()                    { *m = ReadUserByKetResp{} }
func (m *ReadUserByKetResp) String() string            { return proto.CompactTextString(m) }
func (*ReadUserByKetResp) ProtoMessage()               {}
func (*ReadUserByKetResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReadUserByKetResp) GetAllKet() []*ReadUserByKet {
	if m != nil {
		return m.AllKet
	}
	return nil
}

type ReadUserByKet struct {
	Username   string `protobuf:"bytes,1,opt,name=Username" json:"Username,omitempty"`
	Password   string `protobuf:"bytes,2,opt,name=Password" json:"Password,omitempty"`
	IDKaryawan string `protobuf:"bytes,3,opt,name=IDKaryawan" json:"IDKaryawan,omitempty"`
	Status     int32  `protobuf:"varint,4,opt,name=Status" json:"Status,omitempty"`
	CreatedBy  string `protobuf:"bytes,5,opt,name=CreatedBy" json:"CreatedBy,omitempty"`
	CreatedOn  string `protobuf:"bytes,6,opt,name=CreatedOn" json:"CreatedOn,omitempty"`
	UpdatedOn  string `protobuf:"bytes,7,opt,name=UpdatedOn" json:"UpdatedOn,omitempty"`
	UpdatedBy  string `protobuf:"bytes,8,opt,name=UpdatedBy" json:"UpdatedBy,omitempty"`
	Keterangan string `protobuf:"bytes,9,opt,name=Keterangan" json:"Keterangan,omitempty"`
}

func (m *ReadUserByKet) Reset()                    { *m = ReadUserByKet{} }
func (m *ReadUserByKet) String() string            { return proto.CompactTextString(m) }
func (*ReadUserByKet) ProtoMessage()               {}
func (*ReadUserByKet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadUserByKet) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ReadUserByKet) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ReadUserByKet) GetIDKaryawan() string {
	if m != nil {
		return m.IDKaryawan
	}
	return ""
}

func (m *ReadUserByKet) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReadUserByKet) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *ReadUserByKet) GetCreatedOn() string {
	if m != nil {
		return m.CreatedOn
	}
	return ""
}

func (m *ReadUserByKet) GetUpdatedOn() string {
	if m != nil {
		return m.UpdatedOn
	}
	return ""
}

func (m *ReadUserByKet) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

func (m *ReadUserByKet) GetKeterangan() string {
	if m != nil {
		return m.Keterangan
	}
	return ""
}

type ReadUserResp struct {
	AllUser []*ReadUserByKet `protobuf:"bytes,1,rep,name=allUser" json:"allUser,omitempty"`
}

func (m *ReadUserResp) Reset()                    { *m = ReadUserResp{} }
func (m *ReadUserResp) String() string            { return proto.CompactTextString(m) }
func (*ReadUserResp) ProtoMessage()               {}
func (*ReadUserResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadUserResp) GetAllUser() []*ReadUserByKet {
	if m != nil {
		return m.AllUser
	}
	return nil
}

type UpdateUserReq struct {
	Username   string `protobuf:"bytes,1,opt,name=Username" json:"Username,omitempty"`
	Password   string `protobuf:"bytes,2,opt,name=Password" json:"Password,omitempty"`
	IDKaryawan string `protobuf:"bytes,3,opt,name=IDKaryawan" json:"IDKaryawan,omitempty"`
	Status     int32  `protobuf:"varint,4,opt,name=Status" json:"Status,omitempty"`
	UpdatedBy  string `protobuf:"bytes,5,opt,name=UpdatedBy" json:"UpdatedBy,omitempty"`
	Keterangan string `protobuf:"bytes,6,opt,name=Keterangan" json:"Keterangan,omitempty"`
}

func (m *UpdateUserReq) Reset()                    { *m = UpdateUserReq{} }
func (m *UpdateUserReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserReq) ProtoMessage()               {}
func (*UpdateUserReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UpdateUserReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UpdateUserReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UpdateUserReq) GetIDKaryawan() string {
	if m != nil {
		return m.IDKaryawan
	}
	return ""
}

func (m *UpdateUserReq) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *UpdateUserReq) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

func (m *UpdateUserReq) GetKeterangan() string {
	if m != nil {
		return m.Keterangan
	}
	return ""
}

func init() {
	proto.RegisterType((*AddUserReq)(nil), "grpc.AddUserReq")
	proto.RegisterType((*ReadUserByKetReq)(nil), "grpc.ReadUserByKetReq")
	proto.RegisterType((*ReadUserByKetResp)(nil), "grpc.ReadUserByKetResp")
	proto.RegisterType((*ReadUserByKet)(nil), "grpc.ReadUserByKet")
	proto.RegisterType((*ReadUserResp)(nil), "grpc.ReadUserResp")
	proto.RegisterType((*UpdateUserReq)(nil), "grpc.UpdateUserReq")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// Client API for UserService service

type UserServiceClient interface {
	AddUser(ctx context.Context, in *AddUserReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error)
	ReadUserByKet(ctx context.Context, in *ReadUserByKetReq, opts ...grpc1.CallOption) (*ReadUserByKetResp, error)
	ReadUser(ctx context.Context, in *google_protobuf.Empty, opts ...grpc1.CallOption) (*ReadUserResp, error)
	UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error)
}

type userServiceClient struct {
	cc *grpc1.ClientConn
}

func NewUserServiceClient(cc *grpc1.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) AddUser(ctx context.Context, in *AddUserReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc1.Invoke(ctx, "/grpc.UserService/AddUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ReadUserByKet(ctx context.Context, in *ReadUserByKetReq, opts ...grpc1.CallOption) (*ReadUserByKetResp, error) {
	out := new(ReadUserByKetResp)
	err := grpc1.Invoke(ctx, "/grpc.UserService/ReadUserByKet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ReadUser(ctx context.Context, in *google_protobuf.Empty, opts ...grpc1.CallOption) (*ReadUserResp, error) {
	out := new(ReadUserResp)
	err := grpc1.Invoke(ctx, "/grpc.UserService/ReadUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc1.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc1.Invoke(ctx, "/grpc.UserService/UpdateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserService service

type UserServiceServer interface {
	AddUser(context.Context, *AddUserReq) (*google_protobuf.Empty, error)
	ReadUserByKet(context.Context, *ReadUserByKetReq) (*ReadUserByKetResp, error)
	ReadUser(context.Context, *google_protobuf.Empty) (*ReadUserResp, error)
	UpdateUser(context.Context, *UpdateUserReq) (*google_protobuf.Empty, error)
}

func RegisterUserServiceServer(s *grpc1.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).AddUser(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.UserService/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).AddUser(ctx, req.(*AddUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ReadUserByKet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadUserByKetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ReadUserByKet(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.UserService/ReadUserByKet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ReadUserByKet(ctx, req.(*ReadUserByKetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ReadUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ReadUser(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.UserService/ReadUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ReadUser(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateUser(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.UserService/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateUser(ctx, req.(*UpdateUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "grpc.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "AddUser",
			Handler:    _UserService_AddUser_Handler,
		},
		{
			MethodName: "ReadUserByKet",
			Handler:    _UserService_ReadUserByKet_Handler,
		},
		{
			MethodName: "ReadUser",
			Handler:    _UserService_ReadUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _UserService_UpdateUser_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "user.proto",
}

func init() { proto.RegisterFile("user.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 407 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x53, 0xdd, 0x8a, 0xda, 0x50,
	0x10, 0xf6, 0xf8, 0x13, 0x75, 0xac, 0x60, 0x4f, 0xc1, 0x1e, 0xd2, 0x52, 0x24, 0x57, 0x42, 0x69,
	0x04, 0x4b, 0xa1, 0x50, 0x0a, 0x6d, 0xda, 0x5e, 0x94, 0x5c, 0xb4, 0x44, 0x7c, 0x80, 0xa3, 0x99,
	0x86, 0x42, 0x4c, 0xe2, 0xc9, 0x71, 0x25, 0x4f, 0xb2, 0xef, 0xb2, 0xb0, 0xcf, 0xb6, 0xcb, 0xc9,
	0x8f, 0x31, 0x46, 0xbd, 0xdd, 0xbd, 0xcb, 0x7c, 0xdf, 0x7c, 0x39, 0x33, 0xdf, 0xcc, 0x00, 0xec,
	0x62, 0x14, 0x66, 0x24, 0x42, 0x19, 0xd2, 0xb6, 0x27, 0xa2, 0xb5, 0xfe, 0xc6, 0x0b, 0x43, 0xcf,
	0xc7, 0x59, 0x8a, 0xad, 0x76, 0xff, 0x66, 0xb8, 0x89, 0x64, 0x92, 0xa5, 0x18, 0x77, 0x04, 0xe0,
	0xbb, 0xeb, 0x2e, 0x63, 0x14, 0x0e, 0x6e, 0xa9, 0x0e, 0x3d, 0xf5, 0x19, 0xf0, 0x0d, 0x32, 0x32,
	0x21, 0xd3, 0xbe, 0x73, 0x88, 0x15, 0xf7, 0x97, 0xc7, 0xf1, 0x3e, 0x14, 0x2e, 0x6b, 0x66, 0x5c,
	0x11, 0xd3, 0x77, 0x00, 0xbf, 0x7f, 0xda, 0x5c, 0x24, 0x7c, 0xcf, 0x03, 0xd6, 0x4a, 0xd9, 0x23,
	0x84, 0x8e, 0x41, 0x5b, 0x48, 0x2e, 0x77, 0x31, 0x6b, 0x4f, 0xc8, 0xb4, 0xe3, 0xe4, 0x11, 0x7d,
	0x0b, 0xfd, 0x1f, 0x02, 0xb9, 0x44, 0xd7, 0x4a, 0x58, 0x27, 0x95, 0x95, 0x80, 0xfa, 0xab, 0x8d,
	0x12, 0x05, 0x0f, 0x3c, 0x1e, 0x30, 0x2d, 0xfb, 0x6b, 0x89, 0x18, 0x73, 0x18, 0x39, 0xc8, 0xd3,
	0xe2, 0xad, 0xc4, 0x46, 0xa9, 0x3a, 0xa8, 0x6a, 0x48, 0x4d, 0xf3, 0x0d, 0x5e, 0x9e, 0x68, 0xe2,
	0x88, 0xbe, 0x07, 0x8d, 0xfb, 0xbe, 0x8d, 0x92, 0x91, 0x49, 0x6b, 0x3a, 0x98, 0xbf, 0x32, 0x95,
	0x73, 0x66, 0x35, 0x31, 0x4f, 0x31, 0x6e, 0x9b, 0x30, 0xac, 0x30, 0xcf, 0xcc, 0xb5, 0x92, 0xfd,
	0x53, 0x98, 0x56, 0x02, 0x8a, 0x5d, 0x46, 0x6e, 0xce, 0x76, 0x33, 0xf6, 0x00, 0x1c, 0xb1, 0x56,
	0xc2, 0x7a, 0x15, 0xb6, 0x36, 0x8f, 0x7e, 0xcd, 0xdb, 0xaf, 0xf0, 0xa2, 0x30, 0x26, 0xb5, 0xf5,
	0x03, 0x74, 0xb9, 0xef, 0xab, 0xf0, 0x9a, 0xaf, 0x45, 0x8e, 0x71, 0x4f, 0x60, 0x98, 0x3d, 0xf6,
	0x84, 0xeb, 0x58, 0xb6, 0xdf, 0xb9, 0xde, 0x7e, 0x6d, 0x1d, 0xe7, 0x0f, 0x04, 0x06, 0xaa, 0xbc,
	0x05, 0x8a, 0x9b, 0xff, 0x6b, 0xa4, 0x9f, 0xa0, 0x9b, 0x9f, 0x16, 0x1d, 0x65, 0x8d, 0x97, 0x97,
	0xa6, 0x8f, 0xcd, 0xec, 0x2c, 0xcd, 0xe2, 0x2c, 0xcd, 0x5f, 0xea, 0x2c, 0x8d, 0x06, 0xb5, 0x4e,
	0xd7, 0x6b, 0x7c, 0xce, 0x35, 0xdc, 0xea, 0xaf, 0xcf, 0xe2, 0x71, 0x64, 0x34, 0xe8, 0x67, 0xe8,
	0x15, 0x30, 0xbd, 0xf0, 0x92, 0x4e, 0xab, 0xf2, 0x5c, 0xf9, 0x05, 0xa0, 0x9c, 0x01, 0xcd, 0x07,
	0x56, 0x99, 0xca, 0xe5, 0xd2, 0x57, 0x5a, 0x8a, 0x7c, 0x7c, 0x0c, 0x00, 0x00, 0xff, 0xff, 0xf4,
	0xf7, 0x2d, 0x2c, 0x85, 0x04, 0x00, 0x00,
}
